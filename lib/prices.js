const {levenshtein} = require('./levenshtein');
const {PP, GP, EP, SP, CP} = require('./money');

/**
 * Contains all the prices that are known to us
 */
const prices = {
    "padded": "5" + GP,
    "padded-armor": "5" + GP,
    "leather": "10" + GP,
    "leather-armor": "10" + GP,
    "studded-leather": "45" + GP,
    "studded-leather-armor": "45" + GP,
    "hide-armor": "10" + GP,
    "chain-shirt": "50" + GP,
    "scale-mail": "50" + GP,
    "scale-mail-armor": "50" + GP,
    "breastplate": "400" + GP,
    "half-plate": "750" + GP,
    "half-plate=armor": "750" + GP,
    "ring-mail": "30" + GP,
    "ring-mail-armor": "30" + GP,
    "chain-mail": "75" + GP,
    "chain-mail-armor": "75" + GP,
    "splint": "200" + GP,
    "splint-armor": "200" + GP,
    "plate": "1,500" + GP,
    "plate-armor": "1,500" + GP,
    "shield": "10" + GP,
    "club": "1" + SP,
    "dagger": "2" + GP,
    "greatclub": "2" + SP,
    "handaxe": "5" + GP,
    "javelin": "5" + SP,
    "light-hammer": "2" + GP,
    "mace": "5" + GP,
    "quarterstaff": "2" + SP,
    "sickle": "1" + GP,
    "spear": "1" + GP,
    "light-crossbow": "25" + GP,
    "dart": "5" + CP,
    "shortbow": "25" + GP,
    "sling": "1" + SP,
    "battleaxe": "10" + GP,
    "flail": "10" + GP,
    "glaive": "20" + GP,
    "greataxe": "30" + GP,
    "greatsword": "50" + GP,
    "halberd": "20" + GP,
    "lance": "10" + GP,
    "longsword": "15" + GP,
    "maul": "10" + GP,
    "morningstar": "15" + GP,
    "pike": "5" + GP,
    "rapier": "25" + GP,
    "scimitar": "25" + GP,
    "shortsword": "10" + GP,
    "trident": "5" + GP,
    "war-pick": "5" + GP,
    "warhammer": "15" + GP,
    "whip": "2" + GP,
    "blowgun": "10" + GP,
    "hand-crossbow": "75" + GP,
    "heavy-crossbow": "50" + GP,
    "longbow": "50" + GP,
    "net": "1" + GP,
    "alchemists-supplies": "50" + GP,
    "brewers-supplies": "20" + GP,
    "calligraphers-supplies": "10" + GP,
    "carpenters-tools": "8" + GP,
    "cartographers-tools": "15" + GP,
    "cobblers-tools": "5" + GP,
    "cooks-utensils": "1" + GP,
    "glassblowers-tools": "30" + GP,
    "jewelers-tools": "25" + GP,
    "leatherworkers-tools": "5" + GP,
    "masons-tools": "10" + GP,
    "painters-supplies": "10" + GP,
    "potters-tools": "10" + GP,
    "smiths-tools": "20" + GP,
    "tinkers-tools": "50" + GP,
    "weavers-tools": "1" + GP,
    "woodcarvers-tools": "1" + GP,
    "dice-set": "1" + SP,
    "dragonchess-set": "1" + GP,
    "playing-card-set": "5" + SP,
    "three-dragon-ante-set": "1" + GP,
    "herbalism-kit": "5" + GP,
    "bagpipes": "30" + GP,
    "drum": "6" + GP,
    "dulcimer": "25" + GP,
    "flute": "2" + GP,
    "lute": "35" + GP,
    "lyre": "30" + GP,
    "horn": "3" + GP,
    "pan-flute": "12" + GP,
    "shawm": "2" + GP,
    "viol": "30" + GP,
    "poisoners-kit": "50" + GP,
    "thieves'-tools": "25" + GP,
    "disguise-kit": "25" + GP,
    "forgery-kit": "15" + GP,
    "abacus": "2" + GP,
    "acid": "25" + GP,
    "vial-of-acid": "25" + GP,
    "acid-vial": "25" + GP,
    "alchemists-fire": "50"  + GP + " (flask)",
    "arrows": "1 " + GP + "  (20pcs)",
    "blowgun-needles": "1 " + GP + "  (50pcs)",
    "crossbow-bolts": "1 " + GP + "  (20pcs)",
    "sling-bullets": "4 " + CP + "  (20pcs)",
    "antitoxin": "50 " + GP + "  (vial)",
    "crystal": "10" + GP,
    "orb": "20" + GP,
    "rod": "10" + GP,
    "staff": "5" + GP,
    "wand": "10" + GP,
    "backpack": "2" + GP,
    "ball-bearings": "1 " + GP + "  (1,000pcs)",
    "barrel": "2" + GP,
    "basket": "4" + SP,
    "bedroll": "1" + GP,
    "bell": "1" + GP,
    "blanket": "5" + SP,
    "block-and-tackle": "1" + GP,
    "book": "25" + GP,
    "glass-bottle": "2" + GP,
    "bucket": "5" + CP,
    "caltrops": "1 " + GP + "  (20pcs)",
    "candle": "1" + CP,
    "crossbow-case-bolt": "1" + GP,
    "map-case-or-scroll": "1" + GP,
    "chain": "5 " + GP + "  (10ft.)",
    "chalk": "1 " + CP + "  (1pc)",
    "chest": "5" + GP,
    "climbers-kit": "25" + GP,
    "common-clothes": "5" + SP,
    "costume-clothes": "5" + GP,
    "fine-clothes": "15" + GP,
    "traveler-clothess": "2" + GP,
    "component-pouch": "25" + GP,
    "crowbar": "2" + GP,
    "sprig-of-mistletoe": "1" + GP,
    "mistletoe": "1" + GP,
    "totem": "1" + GP,
    "wooden-staff": "5" + GP,
    "yew-wand": "10" + GP,
    "fishing-tackle": "1" + GP,
    "flask": "2" + CP,
    "tankard": "2" + CP,
    "grappling-hook": "2" + GP,
    "hammer": "1" + GP,
    "sledge-hammer": "2" + GP,
    "healers-kit": "5" + GP,
    "amulet": "5" + GP,
    "emblem": "5" + GP,
    "reliquary": "5" + GP,
    "holy-water": "25 " + GP + "  (flask)",
    "hourglass": "25" + GP,
    "hunting-trap": "5" + GP,
    "ink": "10 " + GP + "  (1oz bottle)",
    "pen": "2" + CP,
    "jug": "2" + CP,
    "pitcher": "2" + CP,
    "ladder": "1 " + SP + "  (10ft.)",
    "lamp": "5" + SP,
    "bullseye-lantern": "10" + GP,
    "hooded-lantern": "5" + GP,
    "lock": "10" + GP,
    "magnifying-glass": "100" + GP,
    "manacles": "2" + GP,
    "mess-kit": "2" + SP,
    "steel-mirror": "5" + GP,
    "oil": "1 " + SP + "  (flask)",
    "paper": "2 " + SP + "  (1 sheet)",
    "parchment": "1 " + SP + "  (1 sheet)",
    "perfume": "5 " + GP + "  (vial)",
    "miner-picks": "2" + GP,
    "piton": "5" + CP,
    "basic-poison": "100 " + GP + "  (vial)",
    "pole": "5 " + CP + "  (10ft.)",
    "iron-pot": "2" + GP,
    "potion-of-healing": "50" + GP,
    "pouch": "5" + SP,
    "quiver": "1" + GP,
    "portable-ram": "4" + GP,
    "rations": "5 " + SP + "  (p/day)",
    "robes": "1" + GP,
    "hempen-rope": "1 " + GP + "  (50ft.)",
    "silk-rope": "10 " + GP + "  (50ft.)",
    "rope": "1 " + GP + "  (hempen, 50ft.) OR 10 " + GP + "  (silk, 50ft.)",
    "sack": "1" + CP,
    "merchant-scales": "5" + GP,
    "scales": "5" + GP,
    "sealing-wax": "5" + SP,
    "shovel": "2" + GP,
    "signal-whistle": "5" + CP,
    "whistle": "5" + CP,
    "signet-ring": "5" + GP,
    "soap": "2" + CP,
    "spellbook": "50" + GP,
    "iron-spikes": "1 " + GP + "  (10pcs)",
    "spyglass": "1,000" + GP,
    "tent": "2 " + GP + "  (2 person)",
    "tinderbox": "5" + SP,
    "torch": "1" + CP,
    "vial": "1" + GP,
    "waterskin": "2" + SP,
    "whetstone": "1" + CP,
    "camel": "50" + GP,
    "donkey": "8" + GP,
    "mule": "8" + GP,
    "elephant": "200" + GP,
    "draft-horse": "50" + GP,
    "riding-horse": "75" + GP,
    "mastiff": "25" + GP,
    "pony": "30" + GP,
    "warhorse": "400" + GP,
    "bit-and-bridle": "2" + GP,
    "carriage": "100" + GP,
    "cart": "15" + GP,
    "chariot": "250" + GP,
    "feed": "5cp (per-day)",
    "pack": "5" + GP,
    "saddlebags": "4" + GP,
    "sled": "20" + GP,
    "wagon": "35" + GP,
    "galley": "30,000" + GP,
    "keelboat": "3,000" + GP,
    "longship": "10,000" + GP,
    "rowboat": "50" + GP,
    "sailing-ship": "10,000" + GP,
    "warship": "25,000" + GP,
}

/**
 * See if there is a price known for the provided itemName
 * @param {String} itemName 
 * @param {Boolean} verbal if it needs to print to the console
 */
exports.price = function(itemName, verbal){
    //Remove any weird characters
    item = itemName.replace("'s", 's');
    item = item.toLowerCase().trim().replace(/\s+/g, '-');
    //Try to retrieve the result from the price table
    let result = prices[item];
    //See if the item is plural
    let plural = item.substring(item.length - 1) == 's';
    //See if the item starts with a vowel
    let vowelStart = ["a", "e", "i", "o", "u"].indexOf(item.substring(0, 1)) > -1;
    //If we're verbal, print the output
    if(verbal){
        if(result){
            console.log((plural ? "" : (vowelStart ? "an " : "a ")) + item + " cost" + (plural ? " " : "s ") + result);
        }else{
            //Not found, try to look for closest match
            console.log("I couldn't find '" + itemName + "' in the database...");
            let keys = Object.keys(prices);
            /**Sort based on levenshtein order */
            keys.sort(function(a, b){
                return levenshtein(a, item) - levenshtein(b, item);
            });
            //Show the 5 best options
            console.log("--------------------------------");
            console.log("Closest options: " + keys.splice(0, 5).join(", "));
        }
    }
    //Return the found price anyway
    return result;
}